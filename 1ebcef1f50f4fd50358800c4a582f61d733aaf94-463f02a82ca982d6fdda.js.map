{"version":3,"file":"1ebcef1f50f4fd50358800c4a582f61d733aaf94-463f02a82ca982d6fdda.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconsManifest.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconContext.js","webpack://gatsby-starter-default/./node_modules/react-icons/lib/esm/iconBase.js","webpack://gatsby-starter-default/./blog-config.js","webpack://gatsby-starter-default/./src/components/Footer/index.tsx","webpack://gatsby-starter-default/./src/components/GlobalNavigation/GlobalNavigation.style.ts","webpack://gatsby-starter-default/./src/components/GlobalNavigation/BlogTitle.tsx","webpack://gatsby-starter-default/./src/components/GlobalNavigation/ThemeSwitchButton.tsx","webpack://gatsby-starter-default/./src/components/GlobalNavigation/index.tsx","webpack://gatsby-starter-default/./src/styles/index.tsx","webpack://gatsby-starter-default/./src/Layout/Layout.style.ts","webpack://gatsby-starter-default/./src/Layout/index.tsx","webpack://gatsby-starter-default/./src/constant/blog.config.ts","webpack://gatsby-starter-default/./src/utils/browserStorage.ts","webpack://gatsby-starter-default/./src/utils/themeMode.ts","webpack://gatsby-starter-default/./src/hooks/useThemeMode.ts","webpack://gatsby-starter-default/./src/context/ThemeMode.Provider.tsx","webpack://gatsby-starter-default/./src/styles/markdown.ts","webpack://gatsby-starter-default/./src/utils/index.ts"],"sourcesContent":["export var IconsManifest = [{\n  \"id\": \"ci\",\n  \"name\": \"Circum Icons\",\n  \"projectUrl\": \"https://circumicons.com/\",\n  \"license\": \"MPL-2.0 license\",\n  \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n}, {\n  \"id\": \"fa\",\n  \"name\": \"Font Awesome\",\n  \"projectUrl\": \"https://fontawesome.com/\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"io\",\n  \"name\": \"Ionicons 4\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"io5\",\n  \"name\": \"Ionicons 5\",\n  \"projectUrl\": \"https://ionicons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"md\",\n  \"name\": \"Material Design icons\",\n  \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n}, {\n  \"id\": \"ti\",\n  \"name\": \"Typicons\",\n  \"projectUrl\": \"http://s-ings.com/typicons/\",\n  \"license\": \"CC BY-SA 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n}, {\n  \"id\": \"go\",\n  \"name\": \"Github Octicons icons\",\n  \"projectUrl\": \"https://octicons.github.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"fi\",\n  \"name\": \"Feather\",\n  \"projectUrl\": \"https://feathericons.com/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n}, {\n  \"id\": \"gi\",\n  \"name\": \"Game Icons\",\n  \"projectUrl\": \"https://game-icons.net/\",\n  \"license\": \"CC BY 3.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n}, {\n  \"id\": \"wi\",\n  \"name\": \"Weather Icons\",\n  \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n  \"license\": \"SIL OFL 1.1\",\n  \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n}, {\n  \"id\": \"di\",\n  \"name\": \"Devicons\",\n  \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ai\",\n  \"name\": \"Ant Design Icons\",\n  \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"bs\",\n  \"name\": \"Bootstrap Icons\",\n  \"projectUrl\": \"https://github.com/twbs/icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"ri\",\n  \"name\": \"Remix Icon\",\n  \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"fc\",\n  \"name\": \"Flat Color Icons\",\n  \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"gr\",\n  \"name\": \"Grommet-Icons\",\n  \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n  \"license\": \"Apache License Version 2.0\",\n  \"licenseUrl\": \"http://www.apache.org/licenses/\"\n}, {\n  \"id\": \"hi\",\n  \"name\": \"Heroicons\",\n  \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"hi2\",\n  \"name\": \"Heroicons 2\",\n  \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"si\",\n  \"name\": \"Simple Icons\",\n  \"projectUrl\": \"https://simpleicons.org/\",\n  \"license\": \"CC0 1.0 Universal\",\n  \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n}, {\n  \"id\": \"sl\",\n  \"name\": \"Simple Line Icons\",\n  \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"im\",\n  \"name\": \"IcoMoon Free\",\n  \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n}, {\n  \"id\": \"bi\",\n  \"name\": \"BoxIcons\",\n  \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n  \"license\": \"CC BY 4.0 License\",\n  \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n}, {\n  \"id\": \"cg\",\n  \"name\": \"css.gg\",\n  \"projectUrl\": \"https://github.com/astrit/css.gg\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"vsc\",\n  \"name\": \"VS Code Icons\",\n  \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n  \"license\": \"CC BY 4.0\",\n  \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n}, {\n  \"id\": \"tb\",\n  \"name\": \"Tabler Icons\",\n  \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n}, {\n  \"id\": \"tfi\",\n  \"name\": \"Themify Icons\",\n  \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n}, {\n  \"id\": \"rx\",\n  \"name\": \"Radix Icons\",\n  \"projectUrl\": \"https://icons.radix-ui.com\",\n  \"license\": \"MIT\",\n  \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n}];","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && React.createContext(DefaultContext);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext\";\n\nfunction Tree2Element(tree) {\n  return tree && tree.map(function (node, i) {\n    return React.createElement(node.tag, __assign({\n      key: i\n    }, node.attr), Tree2Element(node.child));\n  });\n}\n\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return function (props) {\n    return React.createElement(IconBase, __assign({\n      attr: __assign({}, data.attr)\n    }, props), Tree2Element(data.child));\n  };\n}\nexport function IconBase(props) {\n  var elem = function elem(conf) {\n    var attr = props.attr,\n        size = props.size,\n        title = props.title,\n        svgProps = __rest(props, [\"attr\", \"size\", \"title\"]);\n\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return React.createElement(\"svg\", __assign({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: __assign(__assign({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && React.createElement(\"title\", null, title), props.children);\n  };\n\n  return IconContext !== undefined ? React.createElement(IconContext.Consumer, null, function (conf) {\n    return elem(conf);\n  }) : elem(DefaultContext);\n}","module.exports = {}\n","import styled from '@emotion/styled'\n\nconst Footer = () => {\n  return <Container>© 2022 Developer YunHo(Dori), Powered By Gatsby.</Container>\n}\n\nexport default Footer\n\nconst Container = styled.footer`\n  margin-top: 32px;\n  padding: 40px 0;\n  text-align: center;\n  font-size: 11pt;\n`\n","import styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\nexport const Container = styled.header<{ isHidden: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  position: fixed;\n  top: ${({ isHidden }) => (isHidden ? -60 : 0)}px;\n  left: 0;\n  right: 0;\n  padding: 1rem 2rem;\n  backdrop-filter: blur(5px);\n  transition: top 0.5s, opacity 0.5s;\n  z-index: 999;\n  width: 100vw;\n  ${({ theme: { typography } }) => typography.linkMedium};\n\n  color: var(--color-text);\n  background-color: var(--color-background-secondary);\n  box-shadow: var(--color-navigation-shadow);\n  opacity: ${({ isHidden }) => (isHidden ? 0 : 1)};\n`\n\nexport const BlogTitle = styled.div``\n\nexport const NavLinks = styled.nav`\n  > ul {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n  }\n`\n\nexport const NavLink = styled(Link)``\n\nexport const ThemeSwitchButton = styled.button`\n  width: 24px;\n  height: 24px;\n  > svg {\n    width: 100%;\n    height: 100%;\n  }\n`\n","import BLOG_CONFIG from '@/constant/blog.config'\n\nimport * as S from './GlobalNavigation.style'\n\nconst BlogTitle = () => {\n  return (\n    <S.BlogTitle>\n      <a href=\"/\">{BLOG_CONFIG.title}</a>\n    </S.BlogTitle>\n  )\n}\n\nexport default BlogTitle\n","import { FaRegMoon } from 'react-icons/fa'\nimport { FiSun } from 'react-icons/fi'\n\nimport { useThemeModeProviderState, useThemeModeProviderAction } from '@/context/ThemeMode.Provider'\n\nimport * as S from './GlobalNavigation.style'\n\nconst ThemeSwitchButton = () => {\n  const { isDarkMode } = useThemeModeProviderState()\n  const { themeToggler } = useThemeModeProviderAction()\n\n  return <S.ThemeSwitchButton onClick={themeToggler}>{isDarkMode ? <FaRegMoon /> : <FiSun />}</S.ThemeSwitchButton>\n}\n\nexport default ThemeSwitchButton\n","import { useState } from 'react'\n\nimport BlogTitle from './BlogTitle'\nimport * as S from './GlobalNavigation.style'\nimport ThemeSwitchButton from './ThemeSwitchButton'\n\nconst ROUTE_LINKS = [\n  { label: 'Home', url: '/' },\n  { label: 'About', url: '/about' },\n]\n\nconst GlobalNavigation = () => {\n  const [isHidden, setIsHidden] = useState(false) // 스크롤 내리면 없어지게 하기\n  return (\n    <S.Container isHidden={isHidden}>\n      <BlogTitle />\n      <S.NavLinks>\n        <ul>\n          <ThemeSwitchButton />\n          {ROUTE_LINKS.map(route => (\n            <S.NavLink key={route.url} to={route.url}>\n              {route.label}\n            </S.NavLink>\n          ))}\n        </ul>\n      </S.NavLinks>\n    </S.Container>\n  )\n}\n\nexport default GlobalNavigation\n","import { ThemeProvider } from '@emotion/react'\nimport { ReactNode } from 'react'\n\nimport GlobalStyle from '@/styles/GlobalStyle'\nimport theme from '@/styles/theme'\n\ninterface StylesProps {\n  children: ReactNode\n}\n\nconst Styles = ({ children }: StylesProps) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      {children}\n    </ThemeProvider>\n  )\n}\n\nexport default Styles\n","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 100px;\n  color: var(--color-text);\n  background-color: var(--color-background);\n`\n","import { ReactNode } from 'react'\n\nimport Footer from '@/components/Footer'\nimport GlobalNavigation from '@/components/GlobalNavigation'\nimport ThemeModeProvider from '@/context/ThemeMode.Provider'\nimport Styles from '@/styles'\n\nimport * as S from './Layout.style'\n\ninterface LayoutProps {\n  children: ReactNode\n}\n\nconst Layout = ({ children }: LayoutProps) => {\n  return (\n    <ThemeModeProvider>\n      <Styles>\n        <S.Container>\n          <GlobalNavigation />\n          <main>{children}</main>\n          <Footer />\n        </S.Container>\n      </Styles>\n    </ThemeModeProvider>\n  )\n}\n\nexport default Layout\n","import { ConfigType } from '@/types/gatsby.type'\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\nconst blogConfig: ConfigType = require('../../blog-config')\n\nconst BLOG_CONFIG = {\n  ...blogConfig,\n}\n\nexport default BLOG_CONFIG\n","import { isBrowser } from '@/utils'\n\nexport interface BrowserStorage {\n  set: <T extends string>(key: string, value: T) => void\n  get: (key: string) => string | null\n  reset: () => void\n}\n\nconst browserStorage: BrowserStorage = {\n  set: (key, value) => {\n    if (typeof value === 'string') {\n      isBrowser && localStorage.setItem(key, value)\n    } else {\n      isBrowser && localStorage.setItem(key, JSON.stringify(value))\n    }\n  },\n  get: key => {\n    return (isBrowser && localStorage.getItem(key)) || null\n  },\n  reset: () => {\n    isBrowser && localStorage.clear()\n  },\n}\n\nexport default browserStorage\n","import { isBrowser } from '@/utils'\n\nimport browserStorage from './browserStorage'\n\ntype ThemeMode = 'dark' | 'light'\n\nexport interface ThemeModeType {\n  $body: HTMLElement | undefined\n  isDarkMode: boolean\n  themeMode: ThemeMode\n  themeToggler: () => void\n}\n\n//  prefers-color-scheme 값을 확인 해 시스템의 컬러모드 초기값으로 사용\nconst prefersColorScheme = isBrowser && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n// 이전에 방문했다면 local storage에 theme 값이 저장되어 있을 예정\nconst localTheme = browserStorage.get('theme') as ThemeMode\n\n/**\n * local storage에 저장된 값이 없으면 os에 지정된 prefers-color-scheme에 따라 테마를 선택하기\n */\nconst initialTheme = localTheme || prefersColorScheme\n\nclass ThemeModeHandler implements ThemeModeType {\n  $body: HTMLElement | undefined\n  isDarkMode: boolean\n  themeMode: ThemeMode\n  constructor() {\n    this.$body = isBrowser ? (document.querySelector('body') as HTMLElement) : undefined\n    this.isDarkMode = initialTheme === 'dark'\n    this.themeMode = initialTheme\n    this.setInitMode()\n  }\n  setInitMode() {\n    this.$body?.classList.add(initialTheme)\n  }\n  themeToggler() {\n    this.isDarkMode = isBrowser && this.$body!.classList.contains('dark')\n    if (this.isDarkMode) {\n      this.setLightMode()\n    } else {\n      this.setDarkMode()\n    }\n  }\n  setDarkMode() {\n    this.$body?.classList.remove('light')\n    this.$body?.classList.add('dark')\n    browserStorage.set('theme', 'dark')\n    this.isDarkMode = true\n    this.themeMode = 'dark'\n  }\n  setLightMode() {\n    this.$body?.classList.remove('dark')\n    this.$body?.classList.add('light')\n    browserStorage.set('theme', 'light')\n    this.isDarkMode = false\n    this.themeMode = 'light'\n  }\n}\n\nconst themeModeHandler = new ThemeModeHandler()\n\nexport default themeModeHandler\n","import { useMemo, useState } from 'react'\n\nimport themeModeHandler, { ThemeModeType } from '@/utils/themeMode'\n\nexport type ThemeModeStateType = Pick<ThemeModeType, 'isDarkMode' | 'themeMode'>\n\nexport type ThemeModeActionType = Pick<ThemeModeType, 'themeToggler'>\n\nexport const themeInitMode = {\n  isDarkMode: themeModeHandler.isDarkMode,\n  themeMode: themeModeHandler.themeMode,\n}\n\nconst useThemeMode = () => {\n  const [themeMode, setThemeMode] = useState(themeInitMode.themeMode)\n  const [isDarkMode, setIsDarkMode] = useState(themeInitMode.isDarkMode)\n\n  const themeToggler = () => {\n    themeModeHandler.themeToggler()\n    setIsDarkMode(themeModeHandler.isDarkMode)\n    setThemeMode(themeModeHandler.themeMode)\n  }\n\n  const states = useMemo(() => ({ isDarkMode, themeMode }), [isDarkMode, themeMode])\n  const actions = useMemo(() => ({ themeToggler }), [themeToggler])\n\n  return {\n    states,\n    actions,\n  }\n}\n\nexport default useThemeMode\n","import { createContext, useContext, ReactNode } from 'react'\n\nimport useThemeMode, { ThemeModeActionType, ThemeModeStateType, themeInitMode } from '@/hooks/useThemeMode'\n\nconst ThemeModeStateContext = createContext<ThemeModeStateType>(themeInitMode)\nconst ThemeModeActionContext = createContext<ThemeModeActionType | null>(null)\n\ninterface ThemeModeProviderProps {\n  children: ReactNode\n}\n\nconst ThemeModeProvider = ({ children }: ThemeModeProviderProps) => {\n  const { states, actions } = useThemeMode()\n\n  return (\n    <ThemeModeStateContext.Provider value={states}>\n      <ThemeModeActionContext.Provider value={actions}>{children}</ThemeModeActionContext.Provider>\n    </ThemeModeStateContext.Provider>\n  )\n}\n\nexport const useThemeModeProviderState = () => {\n  const states = useContext(ThemeModeStateContext)\n  if (states === undefined) {\n    throw new Error('useThemeModeProviderState should be used within ThemeModeProvider')\n  }\n  return states\n}\n\nexport const useThemeModeProviderAction = () => {\n  const dispatch = useContext(ThemeModeActionContext)\n\n  if (!dispatch) {\n    throw new Error('useThemeModeProviderState must be used within ThemeModeProvider')\n  }\n\n  return dispatch\n}\n\nexport default ThemeModeProvider\n","import { css } from '@emotion/react'\n\nconst markdownStyle = css`\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n  color: var(--color-text);\n  background-color: var(--color-background);\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 32px;\n  }\n\n  // TOC 클릭시 헤더가 보이게끔 이동하기 위한 속성\n  h1[id],\n  h2[id],\n  h3[id],\n  h4[id],\n  h5[id],\n  h6[id] {\n    scroll-margin-top: 6rem; // 각 태그의 높이 만큼\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 32px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 12px 0;\n    padding: 5px 15px;\n    border-left: 2px solid var(--color-text);\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 12px 0;\n  }\n\n  ul,\n  li {\n    list-style: disc;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background-color: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-text'],\n  pre[class*='language-text'] {\n    padding: 1.6px 4.8px;\n    font-size: 14.4px;\n    background-color: var(--color-code-background);\n    font-weight: bold;\n    color: var(--color-code-text);\n    font-size: 14.4px;\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  table {\n    padding: 0;\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  table tr {\n    border-top: 1px solid var(--color-table-border);\n    background-color: var(--color-table-background-color);\n    color: var(--color-text);\n    margin: 0;\n    padding: 0;\n    &:nth-of-type(2n) {\n      background-color: var(--color-table-background-color-second);\n    }\n  }\n\n  thead {\n    display: table-header-group;\n    vertical-align: middle;\n    border-color: inherit;\n  }\n  tr {\n    display: table-row;\n    vertical-align: inherit;\n    border-color: inherit;\n  }\n  table tr th {\n    display: table-cell;\n    font-weight: bold;\n    border: 1px solid var(--color-table-border);\n    text-align: center;\n    margin: 0;\n    padding: 6px 13px;\n    vertical-align: inherit;\n  }\n  table tr td {\n    border: 1px solid var(--color-table-border);\n    text-align: left;\n    margin: 0;\n    padding: 6px 13px;\n  }\n  table tr th :first-of-type,\n  table tr td :first-of-type {\n    margin-top: 0;\n  }\n  table tr th :last-child,\n  table tr td :last-child {\n    margin-bottom: 0;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 80px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`\n\nexport default markdownStyle\n","export const isBrowser = typeof window !== 'undefined'\n\nexport const copyToClipBoard = (text: string) => {\n  isBrowser &&\n    window.navigator.clipboard\n      .writeText(text)\n      .then(() => {\n        alert(`✅ : ${text}`)\n      })\n      .catch(() => {\n        alert('❌ 다시 시도해주세요.')\n      })\n}\n"],"names":["DefaultContext","color","undefined","size","className","style","attr","IconContext","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Tree2Element","tree","map","node","tag","key","child","GenIcon","data","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer","module","exports","___EmotionJSX","Container","isHidden","theme","typography","linkMedium","BlogTitle","NavLinks","NavLink","_styled","Link","process","ThemeSwitchButton","S","href","BLOG_CONFIG","isDarkMode","useThemeModeProviderState","themeToggler","useThemeModeProviderAction","onClick","FaRegMoon","FiSun","ROUTE_LINKS","label","url","useState","route","to","ThemeProvider","GlobalStyle","ThemeModeProvider","Styles","GlobalNavigation","Footer","blogConfig","require","set","value","isBrowser","localStorage","setItem","JSON","stringify","get","getItem","reset","clear","prefersColorScheme","window","matchMedia","matches","initialTheme","browserStorage","ThemeModeHandler","$body","document","querySelector","themeMode","setInitMode","classList","add","contains","setLightMode","setDarkMode","remove","themeInitMode","themeModeHandler","setThemeMode","setIsDarkMode","states","useMemo","actions","ThemeModeStateContext","createContext","ThemeModeActionContext","useContext","Error","dispatch","useThemeMode","Provider","markdownStyle","copyToClipBoard","text","navigator","clipboard","writeText","then","alert","catch"],"sourceRoot":""}